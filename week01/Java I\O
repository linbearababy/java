介绍
输入是程序完成执行所需的任何信息。程序输入可以采用多种形式。有些程序使用图形组件，如 JOptionPane 或InputBox接受用户的信息。您当然熟悉当鼠标光标位于屏幕的特定区域时通过单击鼠标按钮并通过笔输入设备进行控制的程序。还有其他程序，如文字处理程序，从存储在计算机的一个硬盘驱动器上的文件或外部设备（如USB驱动器）中获取一些输入。某些程序（如Web浏览器）通过网络连接从Internet获取数据，而其他程序则从扫描仪，数码相机和麦克风等设备获取数据。可能性仅受计算机科学家的想象力的限制。

输出是程序必须传达给用户的任何信息。您在计算机屏幕上看到的信息正由计算机上当前运行的一个或多个程序输出。当您决定打印文档时，会告诉程序将一些输出发送到打印机。您的计算机发出的任何声音都是因为某些程序将输出发送到计算机上的扬声器。节目输出的可能性也仅受我们的想象力和技能的限制。

在整个学期中，我们将通过使用Java Standard Edition API（目前为JDK 8）中的几个类来执行输入和输出。为简单起见，我们将讨论仅限于几个类和I / O形式。您可能想知道为什么有这么多标准的Java类用于输入和输出。答案是灵活性。标准Java类旨在非常灵活，以支持现在和将来可用的各种输入和输出选项。这种灵活性是以增加复杂性为代价的。

关于用户输入错误处理：

通常，如果用户在程序期望数字时输入字母，则会发生异常[错误]。程序员必须理解和处理这些异常，以便程序不会因简单的输入错误而崩溃。但是，有时候这种类型的用户输入验证不是我们任务的核心焦点。在这些情况下，我们不一定确切地指出要为多种类型的错误中的每一种显示哪些错误消息。如果我们没有说明错误消息，那么我们打算测试的情况可能不是这样。问你是否不确定。

除非作业指示，否则要求学生不要更改提示或输出格式。在我们大规模的程序分级时，我们必须利用程序通过测试套件和其他自动化工具来编译和运行代码。要使这些程序识别正确答案，程序生成的输出必须与我们期望的输出顺序和格式完全匹配。我们通常会提供样本运行，以确保您确切了解我们对您的计划的期望。


我的第一个 JAVA 程序
以下我们通过一个简单的实例来展示 Java 编程，创建文件 HelloWorld.java(文件名需与类名一致), 代码如下：

      public class HelloWorld {
          public static void main(String[] args) {
              System.out.println("Hello World");
          }
      }
      
      $ javac HelloWorld.java
      $ java HelloWorld
      Hello World

执行命令解析：
以上我们使用了两个命令 javac 和 java。

javac 后面跟着的是java文件的文件名，例如 HelloWorld.java。 该命令用于将 java 源文件编译为 class 字节码文件，如： javac HelloWorld.java。

运行javac命令后，如果成功编译没有错误的话，会出现一个 HelloWorld.class 的文件。

java 后面跟着的是java文件中的类名,例如 HelloWorld 就是类名，如: java HelloWorld。

注意：java命令后面不要加.class。

该控制台窗口是当您运行在Eclipse中显示输出程序自动带到焦点的窗口面板。大多数编程语言都能够在屏幕上或其他标准显示设备上向该窗口显示一串字符。 

我们称之为控制台输出，因为字符串是从程序中发出的，它出现在控制台窗口中。该System.out的 object是一个实例 为PrintStream class，这是一种类型 流我们将在程序运行时使用它来显示标准输出。这是一个重要的输出选项，因为我们编写的许多程序将生成文本输出以用作另一个程序的输入。在Java中使用这种形式的输出很少知道。只需将要显示的值和字符串连接到用户即可。该系统 class是java.lang包的一部分，不需要导入。以下是将输出发送到控制台窗口的示例。

for（int i = 0; i <10; i ++）
   System.out.println（“+ i +”的立方体i ^ 3是“+（int）（Math.pow（i，2）））;
控制台输出的另一个常见用途是显示用户输入的提示。如果您选择让用户在与提示相同的行中输入答案，则在提示后留一个空格（如本示例所示）。以下是提示用户的示例。下一节将介绍用户输入选项。

   //提示用户输入某种类型的信息
   System.out.print（“你叫什么名字？”）; 

   //用于读取（扫描和保存）用户输入的代码将在这里
